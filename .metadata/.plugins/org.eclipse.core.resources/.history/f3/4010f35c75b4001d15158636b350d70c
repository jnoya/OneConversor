package conversor;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ExecutionException;

import org.json.simple.parser.ParseException;

import java.util.Map.Entry;

public class Medidas {

	private int idMedida;
	private String nome;
	private static String simbolo;
	private float valor;
	private int idTiposDeConversao;
	private static Map<String, String> nomeComSimbolo = new HashMap<>();
	private static Map<String, Float> valorComSimbolo = new HashMap<>();

	public Medidas(int medida, String nome, String simbolo, float valor, int tipo) {

		this.idMedida = medida;
		this.nome = nome;
		this.simbolo = simbolo;
		this.valor = (float) valor;
		this.idTiposDeConversao = tipo;
		nomeComSimbolo.put(nome, simbolo);
		valorComSimbolo.put(simbolo, valor);

	}
	
	public String toString(Medidas m) {

		return m.nome;
	}

	public static Map<String, String> getnomeComSimbolo() {

		return nomeComSimbolo;
	}

	public int getTipo(Medidas m) {

		return m.idTiposDeConversao;

	}


	public static Float getValor(String idSimbolo) {

		Set<Entry<String, Float>> associacoes = valorComSimbolo.entrySet();

		for (Entry<String, Float> associacao : associacoes) {

			if (associacao.getKey() == idSimbolo) {

				return (float) associacao.getValue();
			}

		}

		return 0f;

	}

	public static void setCotacoes(Map associacoes) {

		valorComSimbolo = associacoes;
	}

	public static void carregaCotacoes() throws ParseException {

		Conexao.conexao();
		Conexao.carregaCotacoes(valorComSimbolo);

	}

	public static String getSimbolo(String nome) {
		
		Set<Entry<String, String>> associacoes = nomeComSimbolo.entrySet();

		for (Entry<String, String> associacao : associacoes) {

			if (associacao.getValue() == nome) {

				return associacao.getKey();
			}

		}

		return null;

	}

}
